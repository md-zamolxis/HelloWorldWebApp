apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: {{ .Release.Name }}-ingress-nginx
    namespace: {{ .Release.Namespace }}
    annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "50m"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "240"
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "240"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "240"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/secure-backends: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/cors-allow-origin: "*"
        nginx.ingress.kubernetes.io/cors-allow-methods: "*"
        nginx.ingress.kubernetes.io/affinity: cookie
        nginx.ingress.kubernetes.io/affinity-mode: persistent
spec:
    tls:
    - hosts:
      -  {{ .Values.ingress.hosts.website }}
      secretName: {{ .Release.Name }}-certificate
    rules:
    - host: {{ .Values.ingress.hosts.website }}
      http:
        paths:
        - path: /
          pathType: Prefix 
          backend:
              service:
                name: helloworldwebapp
                port:
                  number: 80

---

#Ingress SSL secret / certificate
apiVersion: v1
kind: Secret
metadata:
   name:  {{ .Release.Name }}-certificate
   namespace: {{ .Release.Namespace }}
data:
  tls.crt: {{ .Values.ingress.tls.crt }}
  tls.key:  {{ .Values.ingress.tls.key }}
type: kubernetes.io/tls